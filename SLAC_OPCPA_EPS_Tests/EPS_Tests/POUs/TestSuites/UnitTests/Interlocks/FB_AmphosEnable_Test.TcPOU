<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.17">
  <POU Name="FB_AmphosEnable_Test" Id="{c0048a71-40cb-425a-920b-fa92fa66b08c}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'call_after_init'}
FUNCTION_BLOCK FB_AmphosEnable_Test EXTENDS FB_TestSuite
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[LocksWithHardwareFailure();
EnablesWithAmphosMinorError();
LocksWithAmphosCriticalError();
EnablesWhenNoError();]]></ST>
    </Implementation>
    <Method Name="EnablesWhenNoError" Id="{78be0b16-fc82-4ade-a9ba-17eb954ac394}">
      <Declaration><![CDATA[METHOD EnablesWhenNoError
VAR
	stErrors : st_ErrorStates;
	stAmphosSetpoints : ST_LaserSetpoints := F_LaserSetpoints();
	bResult : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EnablesWhenNoError');

bResult := F_AmphosEnable(
	fAmphosVoltage := stAmphosSetpoints.nMinNominalVoltage,
	stAmphosSetpoints := stAmphosSetpoints,
	stErrors := stErrors
);
AssertTrue(bResult, 'Amphos did not enable');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="EnablesWithAmphosMinorError" Id="{a96a87a0-02d5-47d7-bd7b-8eb1f93767db}">
      <Declaration><![CDATA[METHOD EnablesWithAmphosMinorError
VAR
	stErrors : st_ErrorStates;
	stAmphosSetpoints : ST_LaserSetpoints := F_LaserSetpoints();
	bResult : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EnablesWithAmphosMinorError');

stErrors.bAmphosBeam := TRUE;
bResult := F_AmphosEnable(
	fAmphosVoltage := stAmphosSetpoints.nMinNominalVoltage - 0.001,
	stAmphosSetpoints := stAmphosSetpoints,
	stErrors := stErrors
);
AssertTrue(bResult, 'Amphos did not enable');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="LocksWithAmphosCriticalError" Id="{eab64e8c-fe99-4322-be86-62443c42d485}">
      <Declaration><![CDATA[METHOD LocksWithAmphosCriticalError
VAR
	stErrors : st_ErrorStates;
	stAmphosSetpoints : ST_LaserSetpoints := F_LaserSetpoints();
	bResult : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('LocksWithAmphosCriticalError');

stErrors.bAmphosBeam := TRUE;
bResult := F_AmphosEnable(
	fAmphosVoltage := stAmphosSetpoints.nMinVoltage - 0.1,
	stAmphosSetpoints := stAmphosSetpoints,
	stErrors := stErrors
);
AssertFalse(bResult, 'Amphos did not lock');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="LocksWithHardwareFailure" Id="{ea342f1c-19f4-449a-ac36-8ddd6bb1a06e}">
      <Declaration><![CDATA[METHOD LocksWithHardwareFailure
VAR
	stErrors : st_ErrorStates;
	stAmphosSetpoints : ST_LaserSetpoints := F_LaserSetpoints();
	bResult : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('LocksWithHardwareFailure');

stErrors.bHardwareFailure := TRUE;
bResult := F_AmphosEnable(
	fAmphosVoltage := stAmphosSetpoints.nMinNominalVoltage,
	stAmphosSetpoints := stAmphosSetpoints,
	stErrors := stErrors
);
AssertFalse(bResult, 'Amphos did not lock');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_AmphosEnable_Test">
      <LineId Id="21" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_AmphosEnable_Test.EnablesWhenNoError">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="7" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_AmphosEnable_Test.EnablesWithAmphosMinorError">
      <LineId Id="10" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="26" Count="3" />
      <LineId Id="22" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_AmphosEnable_Test.LocksWithAmphosCriticalError">
      <LineId Id="10" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="30" Count="5" />
      <LineId Id="23" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_AmphosEnable_Test.LocksWithHardwareFailure">
      <LineId Id="10" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="30" Count="5" />
      <LineId Id="23" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>